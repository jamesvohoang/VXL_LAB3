ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB69:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** typedef enum
  30:Core/Src/main.c **** {
  31:Core/Src/main.c ****   RED1_GREEN2,
  32:Core/Src/main.c ****   RED1_YELLOW2,
  33:Core/Src/main.c ****   GREEN1_RED2,
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 2


  34:Core/Src/main.c ****   YELLOW1_RED2
  35:Core/Src/main.c **** }TrafficLightColor;
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** uint8_t segLedIndex = 0;
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_TIM2_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** void Scan7SEG(uint8_t val0, uint8_t val1)
  63:Core/Src/main.c **** {
  64:Core/Src/main.c ****   if(timer2_flag)
  65:Core/Src/main.c ****   {
  66:Core/Src/main.c ****     // Scan 7seg Leds
  67:Core/Src/main.c ****     Disable7SEG(segLedIndex);
  68:Core/Src/main.c ****     segLedIndex++;
  69:Core/Src/main.c ****     if(segLedIndex >= 4)
  70:Core/Src/main.c ****     {
  71:Core/Src/main.c ****       segLedIndex = 0;
  72:Core/Src/main.c ****     }
  73:Core/Src/main.c ****     
  74:Core/Src/main.c ****     switch (segLedIndex)
  75:Core/Src/main.c ****     {
  76:Core/Src/main.c ****       case 0:
  77:Core/Src/main.c ****         display7SEG(val0/10);
  78:Core/Src/main.c ****         break;
  79:Core/Src/main.c ****       case 1:
  80:Core/Src/main.c ****         display7SEG(val0%10);
  81:Core/Src/main.c ****         break;
  82:Core/Src/main.c ****       case 2:
  83:Core/Src/main.c ****         display7SEG(val1/10);
  84:Core/Src/main.c ****         break;
  85:Core/Src/main.c ****       case 3:
  86:Core/Src/main.c ****         display7SEG(val1%10);
  87:Core/Src/main.c ****         break;
  88:Core/Src/main.c ****       
  89:Core/Src/main.c ****       default:
  90:Core/Src/main.c ****         break;
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 3


  91:Core/Src/main.c ****     }
  92:Core/Src/main.c ****     Enable7SEG(segLedIndex);
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     // set timer 2 in 2Hz
  95:Core/Src/main.c ****     setTimer2(50);
  96:Core/Src/main.c ****   }
  97:Core/Src/main.c **** }
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END PFP */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 102:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* USER CODE END 0 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief  The application entry point.
 108:Core/Src/main.c ****   * @retval int
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** int main(void)
 111:Core/Src/main.c **** {
 112:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END 1 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 119:Core/Src/main.c ****   HAL_Init();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END Init */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Configure the system clock */
 126:Core/Src/main.c ****   SystemClock_Config();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE END SysInit */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Initialize all configured peripherals */
 133:Core/Src/main.c ****   MX_GPIO_Init();
 134:Core/Src/main.c ****   MX_TIM2_Init();
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 136:Core/Src/main.c ****   uint8_t count0 = 0;
 137:Core/Src/main.c ****   uint8_t count1 = 0;
 138:Core/Src/main.c ****   TrafficLightColor trafficLightState = 4;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   // Initialize traffic system
 141:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 142:Core/Src/main.c ****   modeState = NORMAL;
 143:Core/Src/main.c ****   TurnAllLightsOff();
 144:Core/Src/main.c ****   DisableAllSegs();
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   // set timer 1 in 1Hz
 147:Core/Src/main.c ****   setTimer1(100);
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 4


 148:Core/Src/main.c ****   // set timer 2 in 2Hz. Use for scan 7Segment Leds
 149:Core/Src/main.c ****   setTimer2(50);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE END 2 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* Infinite loop */
 154:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 155:Core/Src/main.c ****   while (1)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     fsm_for_input_processing();
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     if(modeState != NORMAL)
 160:Core/Src/main.c ****     {
 161:Core/Src/main.c ****       if(timer1_flag)
 162:Core/Src/main.c ****       {
 163:Core/Src/main.c ****         switch (modeState)
 164:Core/Src/main.c ****         {
 165:Core/Src/main.c ****         case MODIFY_FOR_RED:
 166:Core/Src/main.c ****           ToggleAllRedLeds();
 167:Core/Src/main.c ****           Scan7SEG(modeState, durationOfRed);
 168:Core/Src/main.c ****           break;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****         case MODIFY_FOR_YELLOW:
 171:Core/Src/main.c ****           ToggleAllYellowLeds();
 172:Core/Src/main.c ****           Scan7SEG(modeState, durationOfYellow);
 173:Core/Src/main.c ****           break;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****         case MODIFY_FOR_GREEN:
 176:Core/Src/main.c ****           ToggleAllGreenLeds();
 177:Core/Src/main.c ****           Scan7SEG(modeState, durationOfGreen);
 178:Core/Src/main.c ****           break;
 179:Core/Src/main.c ****         
 180:Core/Src/main.c ****         default:
 181:Core/Src/main.c ****           break;
 182:Core/Src/main.c ****         }
 183:Core/Src/main.c ****         // set timer 1 in 2Hz
 184:Core/Src/main.c ****         setTimer1(50);
 185:Core/Src/main.c ****       }
 186:Core/Src/main.c ****     }
 187:Core/Src/main.c ****     else
 188:Core/Src/main.c ****     {
 189:Core/Src/main.c ****       if(timer1_flag)
 190:Core/Src/main.c ****       {
 191:Core/Src/main.c ****         // Check does need to Change Traffic state
 192:Core/Src/main.c ****         if(!count0 || !count1)
 193:Core/Src/main.c ****         {
 194:Core/Src/main.c ****           if(trafficLightState >= 4)
 195:Core/Src/main.c ****             trafficLightState = 0;
 196:Core/Src/main.c ****           else
 197:Core/Src/main.c ****             trafficLightState++;
 198:Core/Src/main.c ****           
 199:Core/Src/main.c ****           switch (trafficLightState)
 200:Core/Src/main.c ****           {
 201:Core/Src/main.c ****           case RED1_GREEN2:
 202:Core/Src/main.c ****             // Turn lights on
 203:Core/Src/main.c ****             TurnAllLightsOff();
 204:Core/Src/main.c ****             HAL_GPIO_WritePin(RED0_GPIO_Port, RED0_Pin, 0);
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 5


 205:Core/Src/main.c ****             HAL_GPIO_WritePin(GRN1_GPIO_Port, GRN1_Pin, 0);
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****             // Set counting down
 208:Core/Src/main.c ****             count0 = durationOfRed + 1;
 209:Core/Src/main.c ****             count1 = durationOfGreen + 1;
 210:Core/Src/main.c ****             break;
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****           case RED1_YELLOW2:
 213:Core/Src/main.c ****             // Turn lights on
 214:Core/Src/main.c ****             TurnAllLightsOff();
 215:Core/Src/main.c ****             HAL_GPIO_WritePin(RED0_GPIO_Port, RED0_Pin, 0);
 216:Core/Src/main.c ****             HAL_GPIO_WritePin(YEL1_GPIO_Port, YEL1_Pin, 0);
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****             // Set counting down
 219:Core/Src/main.c ****             //count0 = durationOfRed + 1;
 220:Core/Src/main.c ****             count1 = durationOfYellow;
 221:Core/Src/main.c ****             break;
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****           case GREEN1_RED2:
 224:Core/Src/main.c ****             // Turn lights on
 225:Core/Src/main.c ****             TurnAllLightsOff();
 226:Core/Src/main.c ****             HAL_GPIO_WritePin(GRN0_GPIO_Port, GRN0_Pin, 0);
 227:Core/Src/main.c ****             HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****             // Set counting down
 230:Core/Src/main.c ****             count0 = durationOfGreen + 1;
 231:Core/Src/main.c ****             count1 = durationOfRed + 1;
 232:Core/Src/main.c ****             break;
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****           case YELLOW1_RED2:
 235:Core/Src/main.c ****             TurnAllLightsOff();
 236:Core/Src/main.c ****             HAL_GPIO_WritePin(YEL0_GPIO_Port, YEL0_Pin, 0);
 237:Core/Src/main.c ****             HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****             // Set counting down
 240:Core/Src/main.c ****             count0 = durationOfYellow;
 241:Core/Src/main.c ****             //count1 = durationOfRed + 1;
 242:Core/Src/main.c ****             break;
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****           default:
 245:Core/Src/main.c ****             break;
 246:Core/Src/main.c ****           }
 247:Core/Src/main.c ****         }
 248:Core/Src/main.c ****         count0--;
 249:Core/Src/main.c ****         count1--;
 250:Core/Src/main.c ****         
 251:Core/Src/main.c ****         setTimer1(100);
 252:Core/Src/main.c ****       }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****       Scan7SEG(count0, count1);
 255:Core/Src/main.c ****     }
 256:Core/Src/main.c ****     /* USER CODE END WHILE */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 259:Core/Src/main.c ****     //HAL_Delay(10);
 260:Core/Src/main.c ****   }
 261:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 6


 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * @brief System Clock Configuration
 266:Core/Src/main.c ****   * @retval None
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c **** void SystemClock_Config(void)
 269:Core/Src/main.c **** {
 270:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 271:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 274:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 277:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 278:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 279:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 280:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 288:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 289:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 290:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 291:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 292:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 295:Core/Src/main.c ****   {
 296:Core/Src/main.c ****     Error_Handler();
 297:Core/Src/main.c ****   }
 298:Core/Src/main.c **** }
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /**
 301:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 302:Core/Src/main.c ****   * @param None
 303:Core/Src/main.c ****   * @retval None
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c **** static void MX_TIM2_Init(void)
 306:Core/Src/main.c **** {
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 313:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 318:Core/Src/main.c ****   htim2.Instance = TIM2;
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 7


 319:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 320:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 321:Core/Src/main.c ****   htim2.Init.Period = 9;
 322:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 323:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 324:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 329:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****     Error_Handler();
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 334:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 335:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** /**
 346:Core/Src/main.c ****   * @brief GPIO Initialization Function
 347:Core/Src/main.c ****   * @param None
 348:Core/Src/main.c ****   * @retval None
 349:Core/Src/main.c ****   */
 350:Core/Src/main.c **** static void MX_GPIO_Init(void)
 351:Core/Src/main.c **** {
  26              		.loc 1 351 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 352:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 352 3 view .LVU1
  43              		.loc 1 352 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 8


 353:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 354:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 357:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 357 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 357 3 view .LVU4
  52              		.loc 1 357 3 view .LVU5
  53 0010 204B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 357 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 357 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 357 3 view .LVU8
 358:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 358 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 358 3 view .LVU10
  68              		.loc 1 358 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 358 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 358 3 view .LVU13
  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 358 3 view .LVU14
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 361:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, RED0_Pin|RED1_Pin|RED2_Pin|RED3_Pin
  80              		.loc 1 361 3 view .LVU15
  81 0036 DFF86080 		ldr	r8, .L3+4
  82 003a 2246     		mov	r2, r4
  83 003c 4FF6FF71 		movw	r1, #65535
  84 0040 4046     		mov	r0, r8
  85 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 362:Core/Src/main.c ****                           |YEL0_Pin|YEL1_Pin|YEL2_Pin|YEL3_Pin
 363:Core/Src/main.c ****                           |GRN0_Pin|GRN1_Pin|GRN2_Pin|GRN3_Pin
 364:Core/Src/main.c ****                           |EN3_Pin|EN0_Pin|EN1_Pin|EN2_Pin, GPIO_PIN_RESET);
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 367:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin|SEG3_Pin
  87              		.loc 1 367 3 view .LVU16
  88 0046 154D     		ldr	r5, .L3+8
  89 0048 2246     		mov	r2, r4
  90 004a 7F21     		movs	r1, #127
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 9


  91 004c 2846     		mov	r0, r5
  92 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 368:Core/Src/main.c ****                           |SEG4_Pin|SEG5_Pin|SEG6_Pin, GPIO_PIN_RESET);
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /*Configure GPIO pins : RED0_Pin RED1_Pin RED2_Pin RED3_Pin
 371:Core/Src/main.c ****                            YEL0_Pin YEL1_Pin YEL2_Pin YEL3_Pin
 372:Core/Src/main.c ****                            GRN0_Pin GRN1_Pin GRN2_Pin GRN3_Pin
 373:Core/Src/main.c ****                            EN3_Pin EN0_Pin EN1_Pin EN2_Pin */
 374:Core/Src/main.c ****   GPIO_InitStruct.Pin = RED0_Pin|RED1_Pin|RED2_Pin|RED3_Pin
  94              		.loc 1 374 3 view .LVU17
  95              		.loc 1 374 23 is_stmt 0 view .LVU18
  96 0052 4FF6FF73 		movw	r3, #65535
  97 0056 0293     		str	r3, [sp, #8]
 375:Core/Src/main.c ****                           |YEL0_Pin|YEL1_Pin|YEL2_Pin|YEL3_Pin
 376:Core/Src/main.c ****                           |GRN0_Pin|GRN1_Pin|GRN2_Pin|GRN3_Pin
 377:Core/Src/main.c ****                           |EN3_Pin|EN0_Pin|EN1_Pin|EN2_Pin;
 378:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 378 3 is_stmt 1 view .LVU19
  99              		.loc 1 378 24 is_stmt 0 view .LVU20
 100 0058 0126     		movs	r6, #1
 101 005a 0396     		str	r6, [sp, #12]
 379:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 379 3 is_stmt 1 view .LVU21
 103              		.loc 1 379 24 is_stmt 0 view .LVU22
 104 005c 0494     		str	r4, [sp, #16]
 380:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 380 3 is_stmt 1 view .LVU23
 106              		.loc 1 380 25 is_stmt 0 view .LVU24
 107 005e 0227     		movs	r7, #2
 108 0060 0597     		str	r7, [sp, #20]
 381:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 381 3 is_stmt 1 view .LVU25
 110 0062 02A9     		add	r1, sp, #8
 111 0064 4046     		mov	r0, r8
 112 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /*Configure GPIO pins : SEG0_Pin SEG1_Pin SEG2_Pin SEG3_Pin
 384:Core/Src/main.c ****                            SEG4_Pin SEG5_Pin SEG6_Pin */
 385:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG0_Pin|SEG1_Pin|SEG2_Pin|SEG3_Pin
 114              		.loc 1 385 3 view .LVU26
 115              		.loc 1 385 23 is_stmt 0 view .LVU27
 116 006a 7F23     		movs	r3, #127
 117 006c 0293     		str	r3, [sp, #8]
 386:Core/Src/main.c ****                           |SEG4_Pin|SEG5_Pin|SEG6_Pin;
 387:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 387 3 is_stmt 1 view .LVU28
 119              		.loc 1 387 24 is_stmt 0 view .LVU29
 120 006e 0396     		str	r6, [sp, #12]
 388:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 388 3 is_stmt 1 view .LVU30
 122              		.loc 1 388 24 is_stmt 0 view .LVU31
 123 0070 0494     		str	r4, [sp, #16]
 389:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 389 3 is_stmt 1 view .LVU32
 125              		.loc 1 389 25 is_stmt 0 view .LVU33
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 10


 126 0072 0597     		str	r7, [sp, #20]
 390:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 127              		.loc 1 390 3 is_stmt 1 view .LVU34
 128 0074 02A9     		add	r1, sp, #8
 129 0076 2846     		mov	r0, r5
 130 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /*Configure GPIO pins : BTN2_Pin BTN1_Pin BTN0_Pin */
 393:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN2_Pin|BTN1_Pin|BTN0_Pin;
 132              		.loc 1 393 3 view .LVU35
 133              		.loc 1 393 23 is_stmt 0 view .LVU36
 134 007c 4FF4E043 		mov	r3, #28672
 135 0080 0293     		str	r3, [sp, #8]
 394:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 136              		.loc 1 394 3 is_stmt 1 view .LVU37
 137              		.loc 1 394 24 is_stmt 0 view .LVU38
 138 0082 0394     		str	r4, [sp, #12]
 395:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 139              		.loc 1 395 3 is_stmt 1 view .LVU39
 140              		.loc 1 395 24 is_stmt 0 view .LVU40
 141 0084 0496     		str	r6, [sp, #16]
 396:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 396 3 is_stmt 1 view .LVU41
 143 0086 02A9     		add	r1, sp, #8
 144 0088 2846     		mov	r0, r5
 145 008a FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 399:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 400:Core/Src/main.c **** }
 147              		.loc 1 400 1 is_stmt 0 view .LVU42
 148 008e 06B0     		add	sp, sp, #24
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 24
 151              		@ sp needed
 152 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 153              	.L4:
 154              		.align	2
 155              	.L3:
 156 0094 00100240 		.word	1073876992
 157 0098 00080140 		.word	1073809408
 158 009c 000C0140 		.word	1073810432
 159              		.cfi_endproc
 160              	.LFE69:
 162              		.section	.text.Scan7SEG,"ax",%progbits
 163              		.align	1
 164              		.global	Scan7SEG
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	Scan7SEG:
 170              	.LVL5:
 171              	.LFB65:
  63:Core/Src/main.c ****   if(timer2_flag)
 172              		.loc 1 63 1 is_stmt 1 view -0
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 11


 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
  64:Core/Src/main.c ****   {
 176              		.loc 1 64 3 view .LVU44
  64:Core/Src/main.c ****   {
 177              		.loc 1 64 6 is_stmt 0 view .LVU45
 178 0000 234B     		ldr	r3, .L19
 179 0002 1B68     		ldr	r3, [r3]
  64:Core/Src/main.c ****   {
 180              		.loc 1 64 5 view .LVU46
 181 0004 03B9     		cbnz	r3, .L18
 182 0006 7047     		bx	lr
 183              	.L18:
  63:Core/Src/main.c ****   if(timer2_flag)
 184              		.loc 1 63 1 view .LVU47
 185 0008 70B5     		push	{r4, r5, r6, lr}
 186              	.LCFI3:
 187              		.cfi_def_cfa_offset 16
 188              		.cfi_offset 4, -16
 189              		.cfi_offset 5, -12
 190              		.cfi_offset 6, -8
 191              		.cfi_offset 14, -4
 192 000a 0546     		mov	r5, r0
 193 000c 0C46     		mov	r4, r1
  67:Core/Src/main.c ****     segLedIndex++;
 194              		.loc 1 67 5 is_stmt 1 view .LVU48
 195 000e 214E     		ldr	r6, .L19+4
 196 0010 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 197              	.LVL6:
  67:Core/Src/main.c ****     segLedIndex++;
 198              		.loc 1 67 5 is_stmt 0 view .LVU49
 199 0012 FFF7FEFF 		bl	Disable7SEG
 200              	.LVL7:
  68:Core/Src/main.c ****     if(segLedIndex >= 4)
 201              		.loc 1 68 5 is_stmt 1 view .LVU50
  68:Core/Src/main.c ****     if(segLedIndex >= 4)
 202              		.loc 1 68 16 is_stmt 0 view .LVU51
 203 0016 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 204 0018 0133     		adds	r3, r3, #1
 205 001a DBB2     		uxtb	r3, r3
 206 001c 3370     		strb	r3, [r6]
  69:Core/Src/main.c ****     {
 207              		.loc 1 69 5 is_stmt 1 view .LVU52
  69:Core/Src/main.c ****     {
 208              		.loc 1 69 7 is_stmt 0 view .LVU53
 209 001e 032B     		cmp	r3, #3
 210 0020 01D9     		bls	.L7
  71:Core/Src/main.c ****     }
 211              		.loc 1 71 7 is_stmt 1 view .LVU54
  71:Core/Src/main.c ****     }
 212              		.loc 1 71 19 is_stmt 0 view .LVU55
 213 0022 0022     		movs	r2, #0
 214 0024 3270     		strb	r2, [r6]
 215              	.L7:
  74:Core/Src/main.c ****     {
 216              		.loc 1 74 5 is_stmt 1 view .LVU56
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 12


 217 0026 1B4B     		ldr	r3, .L19+4
 218 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 219 002a 032B     		cmp	r3, #3
 220 002c 09D8     		bhi	.L8
 221 002e DFE803F0 		tbb	[pc, r3]
 222              	.L10:
 223 0032 02       		.byte	(.L13-.L10)/2
 224 0033 10       		.byte	(.L12-.L10)/2
 225 0034 1C       		.byte	(.L11-.L10)/2
 226 0035 23       		.byte	(.L9-.L10)/2
 227              		.p2align 1
 228              	.L13:
  77:Core/Src/main.c ****         break;
 229              		.loc 1 77 9 view .LVU57
 230 0036 1848     		ldr	r0, .L19+8
 231 0038 A0FB0530 		umull	r3, r0, r0, r5
 232 003c C008     		lsrs	r0, r0, #3
 233 003e FFF7FEFF 		bl	display7SEG
 234              	.LVL8:
  78:Core/Src/main.c ****       case 1:
 235              		.loc 1 78 9 view .LVU58
 236              	.L8:
  92:Core/Src/main.c **** 
 237              		.loc 1 92 5 view .LVU59
 238 0042 144B     		ldr	r3, .L19+4
 239 0044 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 240 0046 FFF7FEFF 		bl	Enable7SEG
 241              	.LVL9:
  95:Core/Src/main.c ****   }
 242              		.loc 1 95 5 view .LVU60
 243 004a 3220     		movs	r0, #50
 244 004c FFF7FEFF 		bl	setTimer2
 245              	.LVL10:
  97:Core/Src/main.c **** 
 246              		.loc 1 97 1 is_stmt 0 view .LVU61
 247 0050 70BD     		pop	{r4, r5, r6, pc}
 248              	.L12:
  80:Core/Src/main.c ****         break;
 249              		.loc 1 80 9 is_stmt 1 view .LVU62
 250 0052 1148     		ldr	r0, .L19+8
 251 0054 A0FB0530 		umull	r3, r0, r0, r5
 252 0058 C008     		lsrs	r0, r0, #3
 253 005a 00EB8000 		add	r0, r0, r0, lsl #2
 254 005e A5EB4000 		sub	r0, r5, r0, lsl #1
 255 0062 C0B2     		uxtb	r0, r0
 256 0064 FFF7FEFF 		bl	display7SEG
 257              	.LVL11:
  81:Core/Src/main.c ****       case 2:
 258              		.loc 1 81 9 view .LVU63
 259 0068 EBE7     		b	.L8
 260              	.L11:
  83:Core/Src/main.c ****         break;
 261              		.loc 1 83 9 view .LVU64
 262 006a 0B49     		ldr	r1, .L19+8
 263 006c A1FB0431 		umull	r3, r1, r1, r4
 264 0070 C808     		lsrs	r0, r1, #3
 265 0072 FFF7FEFF 		bl	display7SEG
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 13


 266              	.LVL12:
  84:Core/Src/main.c ****       case 3:
 267              		.loc 1 84 9 view .LVU65
 268 0076 E4E7     		b	.L8
 269              	.L9:
  86:Core/Src/main.c ****         break;
 270              		.loc 1 86 9 view .LVU66
 271 0078 0749     		ldr	r1, .L19+8
 272 007a A1FB0431 		umull	r3, r1, r1, r4
 273 007e C908     		lsrs	r1, r1, #3
 274 0080 01EB8101 		add	r1, r1, r1, lsl #2
 275 0084 A4EB4101 		sub	r1, r4, r1, lsl #1
 276 0088 C8B2     		uxtb	r0, r1
 277 008a FFF7FEFF 		bl	display7SEG
 278              	.LVL13:
  87:Core/Src/main.c ****       
 279              		.loc 1 87 9 view .LVU67
 280 008e D8E7     		b	.L8
 281              	.L20:
 282              		.align	2
 283              	.L19:
 284 0090 00000000 		.word	timer2_flag
 285 0094 00000000 		.word	.LANCHOR0
 286 0098 CDCCCCCC 		.word	-858993459
 287              		.cfi_endproc
 288              	.LFE65:
 290              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_TIM_PeriodElapsedCallback
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	HAL_TIM_PeriodElapsedCallback:
 298              	.LVL14:
 299              	.LFB70:
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 403:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 404:Core/Src/main.c **** {
 300              		.loc 1 404 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		.loc 1 404 1 is_stmt 0 view .LVU69
 305 0000 08B5     		push	{r3, lr}
 306              	.LCFI4:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 405:Core/Src/main.c ****   if(htim -> Instance == TIM2)
 310              		.loc 1 405 3 is_stmt 1 view .LVU70
 311              		.loc 1 405 11 is_stmt 0 view .LVU71
 312 0002 0368     		ldr	r3, [r0]
 313              		.loc 1 405 5 view .LVU72
 314 0004 B3F1804F 		cmp	r3, #1073741824
 315 0008 00D0     		beq	.L24
 316              	.LVL15:
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 14


 317              	.L21:
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     timerRun();
 408:Core/Src/main.c ****     button_reading();
 409:Core/Src/main.c ****   }
 410:Core/Src/main.c **** }
 318              		.loc 1 410 1 view .LVU73
 319 000a 08BD     		pop	{r3, pc}
 320              	.LVL16:
 321              	.L24:
 407:Core/Src/main.c ****     button_reading();
 322              		.loc 1 407 5 is_stmt 1 view .LVU74
 323 000c FFF7FEFF 		bl	timerRun
 324              	.LVL17:
 408:Core/Src/main.c ****   }
 325              		.loc 1 408 5 view .LVU75
 326 0010 FFF7FEFF 		bl	button_reading
 327              	.LVL18:
 328              		.loc 1 410 1 is_stmt 0 view .LVU76
 329 0014 F9E7     		b	.L21
 330              		.cfi_endproc
 331              	.LFE70:
 333              		.section	.text.Error_Handler,"ax",%progbits
 334              		.align	1
 335              		.global	Error_Handler
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 340              	Error_Handler:
 341              	.LFB71:
 411:Core/Src/main.c **** /* USER CODE END 4 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /**
 414:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 415:Core/Src/main.c ****   * @retval None
 416:Core/Src/main.c ****   */
 417:Core/Src/main.c **** void Error_Handler(void)
 418:Core/Src/main.c **** {
 342              		.loc 1 418 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ Volatile: function does not return.
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 419:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 420:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 421:Core/Src/main.c ****   __disable_irq();
 348              		.loc 1 421 3 view .LVU78
 349              	.LBB6:
 350              	.LBI6:
 351              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 15


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 16


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 17


 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 352              		.loc 2 140 27 view .LVU79
 353              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 354              		.loc 2 142 3 view .LVU80
 355              		.syntax unified
 356              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 357 0000 72B6     		cpsid i
 358              	@ 0 "" 2
 359              		.thumb
 360              		.syntax unified
 361              	.L26:
 362              	.LBE7:
 363              	.LBE6:
 422:Core/Src/main.c ****   while (1)
 364              		.loc 1 422 3 discriminator 1 view .LVU81
 423:Core/Src/main.c ****   {
 424:Core/Src/main.c ****   }
 365              		.loc 1 424 3 discriminator 1 view .LVU82
 422:Core/Src/main.c ****   while (1)
 366              		.loc 1 422 9 discriminator 1 view .LVU83
 367 0002 FEE7     		b	.L26
 368              		.cfi_endproc
 369              	.LFE71:
 371              		.section	.text.MX_TIM2_Init,"ax",%progbits
 372              		.align	1
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	MX_TIM2_Init:
 378              	.LFB68:
 306:Core/Src/main.c **** 
 379              		.loc 1 306 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 24
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 00B5     		push	{lr}
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 18


 384              	.LCFI5:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 14, -4
 387 0002 87B0     		sub	sp, sp, #28
 388              	.LCFI6:
 389              		.cfi_def_cfa_offset 32
 312:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 390              		.loc 1 312 3 view .LVU85
 312:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 391              		.loc 1 312 26 is_stmt 0 view .LVU86
 392 0004 0023     		movs	r3, #0
 393 0006 0293     		str	r3, [sp, #8]
 394 0008 0393     		str	r3, [sp, #12]
 395 000a 0493     		str	r3, [sp, #16]
 396 000c 0593     		str	r3, [sp, #20]
 313:Core/Src/main.c **** 
 397              		.loc 1 313 3 is_stmt 1 view .LVU87
 313:Core/Src/main.c **** 
 398              		.loc 1 313 27 is_stmt 0 view .LVU88
 399 000e 0093     		str	r3, [sp]
 400 0010 0193     		str	r3, [sp, #4]
 318:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 401              		.loc 1 318 3 is_stmt 1 view .LVU89
 318:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 402              		.loc 1 318 18 is_stmt 0 view .LVU90
 403 0012 1448     		ldr	r0, .L35
 404 0014 4FF08042 		mov	r2, #1073741824
 405 0018 0260     		str	r2, [r0]
 319:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 406              		.loc 1 319 3 is_stmt 1 view .LVU91
 319:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 407              		.loc 1 319 24 is_stmt 0 view .LVU92
 408 001a 41F63F72 		movw	r2, #7999
 409 001e 4260     		str	r2, [r0, #4]
 320:Core/Src/main.c ****   htim2.Init.Period = 9;
 410              		.loc 1 320 3 is_stmt 1 view .LVU93
 320:Core/Src/main.c ****   htim2.Init.Period = 9;
 411              		.loc 1 320 26 is_stmt 0 view .LVU94
 412 0020 8360     		str	r3, [r0, #8]
 321:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 413              		.loc 1 321 3 is_stmt 1 view .LVU95
 321:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 414              		.loc 1 321 21 is_stmt 0 view .LVU96
 415 0022 0922     		movs	r2, #9
 416 0024 C260     		str	r2, [r0, #12]
 322:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 417              		.loc 1 322 3 is_stmt 1 view .LVU97
 322:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 418              		.loc 1 322 28 is_stmt 0 view .LVU98
 419 0026 0361     		str	r3, [r0, #16]
 323:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 420              		.loc 1 323 3 is_stmt 1 view .LVU99
 323:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 421              		.loc 1 323 32 is_stmt 0 view .LVU100
 422 0028 8361     		str	r3, [r0, #24]
 324:Core/Src/main.c ****   {
 423              		.loc 1 324 3 is_stmt 1 view .LVU101
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 19


 324:Core/Src/main.c ****   {
 424              		.loc 1 324 7 is_stmt 0 view .LVU102
 425 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 426              	.LVL19:
 324:Core/Src/main.c ****   {
 427              		.loc 1 324 6 view .LVU103
 428 002e 90B9     		cbnz	r0, .L32
 328:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 429              		.loc 1 328 3 is_stmt 1 view .LVU104
 328:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 430              		.loc 1 328 34 is_stmt 0 view .LVU105
 431 0030 4FF48053 		mov	r3, #4096
 432 0034 0293     		str	r3, [sp, #8]
 329:Core/Src/main.c ****   {
 433              		.loc 1 329 3 is_stmt 1 view .LVU106
 329:Core/Src/main.c ****   {
 434              		.loc 1 329 7 is_stmt 0 view .LVU107
 435 0036 02A9     		add	r1, sp, #8
 436 0038 0A48     		ldr	r0, .L35
 437 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 438              	.LVL20:
 329:Core/Src/main.c ****   {
 439              		.loc 1 329 6 view .LVU108
 440 003e 60B9     		cbnz	r0, .L33
 333:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 441              		.loc 1 333 3 is_stmt 1 view .LVU109
 333:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 442              		.loc 1 333 37 is_stmt 0 view .LVU110
 443 0040 0023     		movs	r3, #0
 444 0042 0093     		str	r3, [sp]
 334:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 445              		.loc 1 334 3 is_stmt 1 view .LVU111
 334:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 446              		.loc 1 334 33 is_stmt 0 view .LVU112
 447 0044 0193     		str	r3, [sp, #4]
 335:Core/Src/main.c ****   {
 448              		.loc 1 335 3 is_stmt 1 view .LVU113
 335:Core/Src/main.c ****   {
 449              		.loc 1 335 7 is_stmt 0 view .LVU114
 450 0046 6946     		mov	r1, sp
 451 0048 0648     		ldr	r0, .L35
 452 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 453              	.LVL21:
 335:Core/Src/main.c ****   {
 454              		.loc 1 335 6 view .LVU115
 455 004e 30B9     		cbnz	r0, .L34
 343:Core/Src/main.c **** 
 456              		.loc 1 343 1 view .LVU116
 457 0050 07B0     		add	sp, sp, #28
 458              	.LCFI7:
 459              		.cfi_remember_state
 460              		.cfi_def_cfa_offset 4
 461              		@ sp needed
 462 0052 5DF804FB 		ldr	pc, [sp], #4
 463              	.L32:
 464              	.LCFI8:
 465              		.cfi_restore_state
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 20


 326:Core/Src/main.c ****   }
 466              		.loc 1 326 5 is_stmt 1 view .LVU117
 467 0056 FFF7FEFF 		bl	Error_Handler
 468              	.LVL22:
 469              	.L33:
 331:Core/Src/main.c ****   }
 470              		.loc 1 331 5 view .LVU118
 471 005a FFF7FEFF 		bl	Error_Handler
 472              	.LVL23:
 473              	.L34:
 337:Core/Src/main.c ****   }
 474              		.loc 1 337 5 view .LVU119
 475 005e FFF7FEFF 		bl	Error_Handler
 476              	.LVL24:
 477              	.L36:
 478 0062 00BF     		.align	2
 479              	.L35:
 480 0064 00000000 		.word	.LANCHOR1
 481              		.cfi_endproc
 482              	.LFE68:
 484              		.section	.text.SystemClock_Config,"ax",%progbits
 485              		.align	1
 486              		.global	SystemClock_Config
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 491              	SystemClock_Config:
 492              	.LFB67:
 269:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 493              		.loc 1 269 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 64
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497 0000 00B5     		push	{lr}
 498              	.LCFI9:
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 14, -4
 501 0002 91B0     		sub	sp, sp, #68
 502              	.LCFI10:
 503              		.cfi_def_cfa_offset 72
 270:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 504              		.loc 1 270 3 view .LVU121
 270:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 505              		.loc 1 270 22 is_stmt 0 view .LVU122
 506 0004 2822     		movs	r2, #40
 507 0006 0021     		movs	r1, #0
 508 0008 06A8     		add	r0, sp, #24
 509 000a FFF7FEFF 		bl	memset
 510              	.LVL25:
 271:Core/Src/main.c **** 
 511              		.loc 1 271 3 is_stmt 1 view .LVU123
 271:Core/Src/main.c **** 
 512              		.loc 1 271 22 is_stmt 0 view .LVU124
 513 000e 0023     		movs	r3, #0
 514 0010 0193     		str	r3, [sp, #4]
 515 0012 0293     		str	r3, [sp, #8]
 516 0014 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 21


 517 0016 0493     		str	r3, [sp, #16]
 518 0018 0593     		str	r3, [sp, #20]
 276:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 519              		.loc 1 276 3 is_stmt 1 view .LVU125
 276:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 520              		.loc 1 276 36 is_stmt 0 view .LVU126
 521 001a 0223     		movs	r3, #2
 522 001c 0693     		str	r3, [sp, #24]
 277:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 523              		.loc 1 277 3 is_stmt 1 view .LVU127
 277:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 524              		.loc 1 277 30 is_stmt 0 view .LVU128
 525 001e 0123     		movs	r3, #1
 526 0020 0A93     		str	r3, [sp, #40]
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 527              		.loc 1 278 3 is_stmt 1 view .LVU129
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 528              		.loc 1 278 41 is_stmt 0 view .LVU130
 529 0022 1023     		movs	r3, #16
 530 0024 0B93     		str	r3, [sp, #44]
 279:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 531              		.loc 1 279 3 is_stmt 1 view .LVU131
 280:Core/Src/main.c ****   {
 532              		.loc 1 280 3 view .LVU132
 280:Core/Src/main.c ****   {
 533              		.loc 1 280 7 is_stmt 0 view .LVU133
 534 0026 06A8     		add	r0, sp, #24
 535 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 536              	.LVL26:
 280:Core/Src/main.c ****   {
 537              		.loc 1 280 6 view .LVU134
 538 002c 68B9     		cbnz	r0, .L41
 287:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 539              		.loc 1 287 3 is_stmt 1 view .LVU135
 287:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 540              		.loc 1 287 31 is_stmt 0 view .LVU136
 541 002e 0F23     		movs	r3, #15
 542 0030 0193     		str	r3, [sp, #4]
 289:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 543              		.loc 1 289 3 is_stmt 1 view .LVU137
 289:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 544              		.loc 1 289 34 is_stmt 0 view .LVU138
 545 0032 0021     		movs	r1, #0
 546 0034 0291     		str	r1, [sp, #8]
 290:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 547              		.loc 1 290 3 is_stmt 1 view .LVU139
 290:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 548              		.loc 1 290 35 is_stmt 0 view .LVU140
 549 0036 0391     		str	r1, [sp, #12]
 291:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 550              		.loc 1 291 3 is_stmt 1 view .LVU141
 291:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 551              		.loc 1 291 36 is_stmt 0 view .LVU142
 552 0038 0491     		str	r1, [sp, #16]
 292:Core/Src/main.c **** 
 553              		.loc 1 292 3 is_stmt 1 view .LVU143
 292:Core/Src/main.c **** 
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 22


 554              		.loc 1 292 36 is_stmt 0 view .LVU144
 555 003a 0591     		str	r1, [sp, #20]
 294:Core/Src/main.c ****   {
 556              		.loc 1 294 3 is_stmt 1 view .LVU145
 294:Core/Src/main.c ****   {
 557              		.loc 1 294 7 is_stmt 0 view .LVU146
 558 003c 01A8     		add	r0, sp, #4
 559 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 560              	.LVL27:
 294:Core/Src/main.c ****   {
 561              		.loc 1 294 6 view .LVU147
 562 0042 20B9     		cbnz	r0, .L42
 298:Core/Src/main.c **** 
 563              		.loc 1 298 1 view .LVU148
 564 0044 11B0     		add	sp, sp, #68
 565              	.LCFI11:
 566              		.cfi_remember_state
 567              		.cfi_def_cfa_offset 4
 568              		@ sp needed
 569 0046 5DF804FB 		ldr	pc, [sp], #4
 570              	.L41:
 571              	.LCFI12:
 572              		.cfi_restore_state
 282:Core/Src/main.c ****   }
 573              		.loc 1 282 5 is_stmt 1 view .LVU149
 574 004a FFF7FEFF 		bl	Error_Handler
 575              	.LVL28:
 576              	.L42:
 296:Core/Src/main.c ****   }
 577              		.loc 1 296 5 view .LVU150
 578 004e FFF7FEFF 		bl	Error_Handler
 579              	.LVL29:
 580              		.cfi_endproc
 581              	.LFE67:
 583              		.section	.text.main,"ax",%progbits
 584              		.align	1
 585              		.global	main
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 590              	main:
 591              	.LFB66:
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 592              		.loc 1 111 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 597              	.LCFI13:
 598              		.cfi_def_cfa_offset 24
 599              		.cfi_offset 3, -24
 600              		.cfi_offset 4, -20
 601              		.cfi_offset 5, -16
 602              		.cfi_offset 6, -12
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 119:Core/Src/main.c **** 
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 23


 605              		.loc 1 119 3 view .LVU152
 606 0002 FFF7FEFF 		bl	HAL_Init
 607              	.LVL30:
 126:Core/Src/main.c **** 
 608              		.loc 1 126 3 view .LVU153
 609 0006 FFF7FEFF 		bl	SystemClock_Config
 610              	.LVL31:
 133:Core/Src/main.c ****   MX_TIM2_Init();
 611              		.loc 1 133 3 view .LVU154
 612 000a FFF7FEFF 		bl	MX_GPIO_Init
 613              	.LVL32:
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 614              		.loc 1 134 3 view .LVU155
 615 000e FFF7FEFF 		bl	MX_TIM2_Init
 616              	.LVL33:
 136:Core/Src/main.c ****   uint8_t count1 = 0;
 617              		.loc 1 136 3 view .LVU156
 137:Core/Src/main.c ****   TrafficLightColor trafficLightState = 4;
 618              		.loc 1 137 3 view .LVU157
 138:Core/Src/main.c **** 
 619              		.loc 1 138 3 view .LVU158
 141:Core/Src/main.c ****   modeState = NORMAL;
 620              		.loc 1 141 3 view .LVU159
 621 0012 5548     		ldr	r0, .L61
 622 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 623              	.LVL34:
 142:Core/Src/main.c ****   TurnAllLightsOff();
 624              		.loc 1 142 3 view .LVU160
 142:Core/Src/main.c ****   TurnAllLightsOff();
 625              		.loc 1 142 13 is_stmt 0 view .LVU161
 626 0018 0025     		movs	r5, #0
 627 001a 544B     		ldr	r3, .L61+4
 628 001c 1D70     		strb	r5, [r3]
 143:Core/Src/main.c ****   DisableAllSegs();
 629              		.loc 1 143 3 is_stmt 1 view .LVU162
 630 001e FFF7FEFF 		bl	TurnAllLightsOff
 631              	.LVL35:
 144:Core/Src/main.c **** 
 632              		.loc 1 144 3 view .LVU163
 633 0022 FFF7FEFF 		bl	DisableAllSegs
 634              	.LVL36:
 147:Core/Src/main.c ****   // set timer 2 in 2Hz. Use for scan 7Segment Leds
 635              		.loc 1 147 3 view .LVU164
 636 0026 6420     		movs	r0, #100
 637 0028 FFF7FEFF 		bl	setTimer1
 638              	.LVL37:
 149:Core/Src/main.c **** 
 639              		.loc 1 149 3 view .LVU165
 640 002c 3220     		movs	r0, #50
 641 002e FFF7FEFF 		bl	setTimer2
 642              	.LVL38:
 138:Core/Src/main.c **** 
 643              		.loc 1 138 21 is_stmt 0 view .LVU166
 644 0032 0427     		movs	r7, #4
 137:Core/Src/main.c ****   TrafficLightColor trafficLightState = 4;
 645              		.loc 1 137 11 view .LVU167
 646 0034 2E46     		mov	r6, r5
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 24


 647 0036 4CE0     		b	.L44
 648              	.LVL39:
 649              	.L60:
 166:Core/Src/main.c ****           Scan7SEG(modeState, durationOfRed);
 650              		.loc 1 166 11 is_stmt 1 view .LVU168
 651 0038 FFF7FEFF 		bl	ToggleAllRedLeds
 652              	.LVL40:
 167:Core/Src/main.c ****           break;
 653              		.loc 1 167 11 view .LVU169
 654 003c 4C4B     		ldr	r3, .L61+8
 655 003e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 656 0040 4A4B     		ldr	r3, .L61+4
 657 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 658 0044 FFF7FEFF 		bl	Scan7SEG
 659              	.LVL41:
 168:Core/Src/main.c **** 
 660              		.loc 1 168 11 view .LVU170
 661 0048 53E0     		b	.L49
 662              	.L47:
 171:Core/Src/main.c ****           Scan7SEG(modeState, durationOfYellow);
 663              		.loc 1 171 11 view .LVU171
 664 004a FFF7FEFF 		bl	ToggleAllYellowLeds
 665              	.LVL42:
 172:Core/Src/main.c ****           break;
 666              		.loc 1 172 11 view .LVU172
 667 004e 494B     		ldr	r3, .L61+12
 668 0050 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 669 0052 464B     		ldr	r3, .L61+4
 670 0054 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 671 0056 FFF7FEFF 		bl	Scan7SEG
 672              	.LVL43:
 173:Core/Src/main.c **** 
 673              		.loc 1 173 11 view .LVU173
 674 005a 4AE0     		b	.L49
 675              	.L48:
 176:Core/Src/main.c ****           Scan7SEG(modeState, durationOfGreen);
 676              		.loc 1 176 11 view .LVU174
 677 005c FFF7FEFF 		bl	ToggleAllGreenLeds
 678              	.LVL44:
 177:Core/Src/main.c ****           break;
 679              		.loc 1 177 11 view .LVU175
 680 0060 454B     		ldr	r3, .L61+16
 681 0062 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 682 0064 414B     		ldr	r3, .L61+4
 683 0066 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 684 0068 FFF7FEFF 		bl	Scan7SEG
 685              	.LVL45:
 178:Core/Src/main.c ****         
 686              		.loc 1 178 11 view .LVU176
 687 006c 41E0     		b	.L49
 688              	.L45:
 189:Core/Src/main.c ****       {
 689              		.loc 1 189 7 view .LVU177
 189:Core/Src/main.c ****       {
 690              		.loc 1 189 10 is_stmt 0 view .LVU178
 691 006e 434B     		ldr	r3, .L61+20
 692 0070 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 25


 189:Core/Src/main.c ****       {
 693              		.loc 1 189 9 view .LVU179
 694 0072 53B3     		cbz	r3, .L50
 192:Core/Src/main.c ****         {
 695              		.loc 1 192 9 is_stmt 1 view .LVU180
 192:Core/Src/main.c ****         {
 696              		.loc 1 192 11 is_stmt 0 view .LVU181
 697 0074 05B1     		cbz	r5, .L51
 192:Core/Src/main.c ****         {
 698              		.loc 1 192 20 discriminator 1 view .LVU182
 699 0076 0EBB     		cbnz	r6, .L52
 700              	.L51:
 194:Core/Src/main.c ****             trafficLightState = 0;
 701              		.loc 1 194 11 is_stmt 1 view .LVU183
 194:Core/Src/main.c ****             trafficLightState = 0;
 702              		.loc 1 194 13 is_stmt 0 view .LVU184
 703 0078 032F     		cmp	r7, #3
 704 007a 08D8     		bhi	.L53
 197:Core/Src/main.c ****           
 705              		.loc 1 197 13 is_stmt 1 view .LVU185
 197:Core/Src/main.c ****           
 706              		.loc 1 197 30 is_stmt 0 view .LVU186
 707 007c 0137     		adds	r7, r7, #1
 708              	.LVL46:
 197:Core/Src/main.c ****           
 709              		.loc 1 197 30 view .LVU187
 710 007e FFB2     		uxtb	r7, r7
 711              	.LVL47:
 199:Core/Src/main.c ****           {
 712              		.loc 1 199 11 is_stmt 1 view .LVU188
 713 0080 032F     		cmp	r7, #3
 714 0082 1BD8     		bhi	.L52
 715 0084 DFE807F0 		tbb	[pc, r7]
 716              	.L55:
 717 0088 02       		.byte	(.L58-.L55)/2
 718 0089 39       		.byte	(.L57-.L55)/2
 719 008a 49       		.byte	(.L56-.L55)/2
 720 008b 60       		.byte	(.L54-.L55)/2
 721              		.p2align 1
 722              	.L58:
 723 008c 3C46     		mov	r4, r7
 724              	.L53:
 725              	.LVL48:
 203:Core/Src/main.c ****             HAL_GPIO_WritePin(RED0_GPIO_Port, RED0_Pin, 0);
 726              		.loc 1 203 13 view .LVU189
 727 008e FFF7FEFF 		bl	TurnAllLightsOff
 728              	.LVL49:
 204:Core/Src/main.c ****             HAL_GPIO_WritePin(GRN1_GPIO_Port, GRN1_Pin, 0);
 729              		.loc 1 204 13 view .LVU190
 730 0092 3B4D     		ldr	r5, .L61+24
 731              	.LVL50:
 204:Core/Src/main.c ****             HAL_GPIO_WritePin(GRN1_GPIO_Port, GRN1_Pin, 0);
 732              		.loc 1 204 13 is_stmt 0 view .LVU191
 733 0094 0022     		movs	r2, #0
 734 0096 0121     		movs	r1, #1
 735 0098 2846     		mov	r0, r5
 736 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 26


 737              	.LVL51:
 205:Core/Src/main.c **** 
 738              		.loc 1 205 13 is_stmt 1 view .LVU192
 739 009e 0022     		movs	r2, #0
 740 00a0 4FF40071 		mov	r1, #512
 741 00a4 2846     		mov	r0, r5
 742 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 743              	.LVL52:
 208:Core/Src/main.c ****             count1 = durationOfGreen + 1;
 744              		.loc 1 208 13 view .LVU193
 208:Core/Src/main.c ****             count1 = durationOfGreen + 1;
 745              		.loc 1 208 36 is_stmt 0 view .LVU194
 746 00aa 314B     		ldr	r3, .L61+8
 747 00ac 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 208:Core/Src/main.c ****             count1 = durationOfGreen + 1;
 748              		.loc 1 208 20 view .LVU195
 749 00ae 0135     		adds	r5, r5, #1
 750 00b0 EDB2     		uxtb	r5, r5
 751              	.LVL53:
 209:Core/Src/main.c ****             break;
 752              		.loc 1 209 13 is_stmt 1 view .LVU196
 209:Core/Src/main.c ****             break;
 753              		.loc 1 209 38 is_stmt 0 view .LVU197
 754 00b2 314B     		ldr	r3, .L61+16
 755 00b4 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 756              	.LVL54:
 209:Core/Src/main.c ****             break;
 757              		.loc 1 209 20 view .LVU198
 758 00b6 0136     		adds	r6, r6, #1
 759 00b8 F6B2     		uxtb	r6, r6
 760              	.LVL55:
 210:Core/Src/main.c **** 
 761              		.loc 1 210 13 is_stmt 1 view .LVU199
 762 00ba 2746     		mov	r7, r4
 763              	.L52:
 764              	.LVL56:
 248:Core/Src/main.c ****         count1--;
 765              		.loc 1 248 9 view .LVU200
 248:Core/Src/main.c ****         count1--;
 766              		.loc 1 248 15 is_stmt 0 view .LVU201
 767 00bc 013D     		subs	r5, r5, #1
 768              	.LVL57:
 248:Core/Src/main.c ****         count1--;
 769              		.loc 1 248 15 view .LVU202
 770 00be EDB2     		uxtb	r5, r5
 771              	.LVL58:
 249:Core/Src/main.c ****         
 772              		.loc 1 249 9 is_stmt 1 view .LVU203
 249:Core/Src/main.c ****         
 773              		.loc 1 249 15 is_stmt 0 view .LVU204
 774 00c0 013E     		subs	r6, r6, #1
 775              	.LVL59:
 249:Core/Src/main.c ****         
 776              		.loc 1 249 15 view .LVU205
 777 00c2 F6B2     		uxtb	r6, r6
 778              	.LVL60:
 251:Core/Src/main.c ****       }
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 27


 779              		.loc 1 251 9 is_stmt 1 view .LVU206
 780 00c4 6420     		movs	r0, #100
 781 00c6 FFF7FEFF 		bl	setTimer1
 782              	.LVL61:
 783              	.L50:
 254:Core/Src/main.c ****     }
 784              		.loc 1 254 7 view .LVU207
 785 00ca 3146     		mov	r1, r6
 786 00cc 2846     		mov	r0, r5
 787 00ce FFF7FEFF 		bl	Scan7SEG
 788              	.LVL62:
 789              	.L44:
 155:Core/Src/main.c ****   {
 790              		.loc 1 155 3 view .LVU208
 157:Core/Src/main.c **** 
 791              		.loc 1 157 5 view .LVU209
 792 00d2 FFF7FEFF 		bl	fsm_for_input_processing
 793              	.LVL63:
 159:Core/Src/main.c ****     {
 794              		.loc 1 159 5 view .LVU210
 159:Core/Src/main.c ****     {
 795              		.loc 1 159 18 is_stmt 0 view .LVU211
 796 00d6 254B     		ldr	r3, .L61+4
 797 00d8 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 159:Core/Src/main.c ****     {
 798              		.loc 1 159 7 view .LVU212
 799 00da 002C     		cmp	r4, #0
 800 00dc C7D0     		beq	.L45
 161:Core/Src/main.c ****       {
 801              		.loc 1 161 7 is_stmt 1 view .LVU213
 161:Core/Src/main.c ****       {
 802              		.loc 1 161 10 is_stmt 0 view .LVU214
 803 00de 274B     		ldr	r3, .L61+20
 804 00e0 1B68     		ldr	r3, [r3]
 161:Core/Src/main.c ****       {
 805              		.loc 1 161 9 view .LVU215
 806 00e2 002B     		cmp	r3, #0
 807 00e4 F5D0     		beq	.L44
 163:Core/Src/main.c ****         {
 808              		.loc 1 163 9 is_stmt 1 view .LVU216
 809 00e6 022C     		cmp	r4, #2
 810 00e8 AFD0     		beq	.L47
 811 00ea 032C     		cmp	r4, #3
 812 00ec B6D0     		beq	.L48
 813 00ee 012C     		cmp	r4, #1
 814 00f0 A2D0     		beq	.L60
 815              	.L49:
 184:Core/Src/main.c ****       }
 816              		.loc 1 184 9 view .LVU217
 817 00f2 3220     		movs	r0, #50
 818 00f4 FFF7FEFF 		bl	setTimer1
 819              	.LVL64:
 820 00f8 EBE7     		b	.L44
 821              	.L57:
 214:Core/Src/main.c ****             HAL_GPIO_WritePin(RED0_GPIO_Port, RED0_Pin, 0);
 822              		.loc 1 214 13 view .LVU218
 823 00fa FFF7FEFF 		bl	TurnAllLightsOff
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 28


 824              	.LVL65:
 215:Core/Src/main.c ****             HAL_GPIO_WritePin(YEL1_GPIO_Port, YEL1_Pin, 0);
 825              		.loc 1 215 13 view .LVU219
 826 00fe 204C     		ldr	r4, .L61+24
 827 0100 0022     		movs	r2, #0
 828 0102 0121     		movs	r1, #1
 829 0104 2046     		mov	r0, r4
 830 0106 FFF7FEFF 		bl	HAL_GPIO_WritePin
 831              	.LVL66:
 216:Core/Src/main.c **** 
 832              		.loc 1 216 13 view .LVU220
 833 010a 0022     		movs	r2, #0
 834 010c 2021     		movs	r1, #32
 835 010e 2046     		mov	r0, r4
 836 0110 FFF7FEFF 		bl	HAL_GPIO_WritePin
 837              	.LVL67:
 220:Core/Src/main.c ****             break;
 838              		.loc 1 220 13 view .LVU221
 220:Core/Src/main.c ****             break;
 839              		.loc 1 220 20 is_stmt 0 view .LVU222
 840 0114 174B     		ldr	r3, .L61+12
 841 0116 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 842              	.LVL68:
 221:Core/Src/main.c **** 
 843              		.loc 1 221 13 is_stmt 1 view .LVU223
 844 0118 D0E7     		b	.L52
 845              	.L56:
 225:Core/Src/main.c ****             HAL_GPIO_WritePin(GRN0_GPIO_Port, GRN0_Pin, 0);
 846              		.loc 1 225 13 view .LVU224
 847 011a FFF7FEFF 		bl	TurnAllLightsOff
 848              	.LVL69:
 226:Core/Src/main.c ****             HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
 849              		.loc 1 226 13 view .LVU225
 850 011e 184C     		ldr	r4, .L61+24
 851 0120 0022     		movs	r2, #0
 852 0122 4FF48071 		mov	r1, #256
 853 0126 2046     		mov	r0, r4
 854 0128 FFF7FEFF 		bl	HAL_GPIO_WritePin
 855              	.LVL70:
 227:Core/Src/main.c **** 
 856              		.loc 1 227 13 view .LVU226
 857 012c 0022     		movs	r2, #0
 858 012e 0221     		movs	r1, #2
 859 0130 2046     		mov	r0, r4
 860 0132 FFF7FEFF 		bl	HAL_GPIO_WritePin
 861              	.LVL71:
 230:Core/Src/main.c ****             count1 = durationOfRed + 1;
 862              		.loc 1 230 13 view .LVU227
 230:Core/Src/main.c ****             count1 = durationOfRed + 1;
 863              		.loc 1 230 38 is_stmt 0 view .LVU228
 864 0136 104B     		ldr	r3, .L61+16
 865 0138 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 866              	.LVL72:
 230:Core/Src/main.c ****             count1 = durationOfRed + 1;
 867              		.loc 1 230 20 view .LVU229
 868 013a 0135     		adds	r5, r5, #1
 869 013c EDB2     		uxtb	r5, r5
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 29


 870              	.LVL73:
 231:Core/Src/main.c ****             break;
 871              		.loc 1 231 13 is_stmt 1 view .LVU230
 231:Core/Src/main.c ****             break;
 872              		.loc 1 231 36 is_stmt 0 view .LVU231
 873 013e 0C4B     		ldr	r3, .L61+8
 874 0140 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 875              	.LVL74:
 231:Core/Src/main.c ****             break;
 876              		.loc 1 231 20 view .LVU232
 877 0142 0136     		adds	r6, r6, #1
 878 0144 F6B2     		uxtb	r6, r6
 879              	.LVL75:
 232:Core/Src/main.c **** 
 880              		.loc 1 232 13 is_stmt 1 view .LVU233
 881 0146 B9E7     		b	.L52
 882              	.L54:
 235:Core/Src/main.c ****             HAL_GPIO_WritePin(YEL0_GPIO_Port, YEL0_Pin, 0);
 883              		.loc 1 235 13 view .LVU234
 884 0148 FFF7FEFF 		bl	TurnAllLightsOff
 885              	.LVL76:
 236:Core/Src/main.c ****             HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, 0);
 886              		.loc 1 236 13 view .LVU235
 887 014c 0C4C     		ldr	r4, .L61+24
 888 014e 0022     		movs	r2, #0
 889 0150 1021     		movs	r1, #16
 890 0152 2046     		mov	r0, r4
 891 0154 FFF7FEFF 		bl	HAL_GPIO_WritePin
 892              	.LVL77:
 237:Core/Src/main.c **** 
 893              		.loc 1 237 13 view .LVU236
 894 0158 0022     		movs	r2, #0
 895 015a 0221     		movs	r1, #2
 896 015c 2046     		mov	r0, r4
 897 015e FFF7FEFF 		bl	HAL_GPIO_WritePin
 898              	.LVL78:
 240:Core/Src/main.c ****             //count1 = durationOfRed + 1;
 899              		.loc 1 240 13 view .LVU237
 240:Core/Src/main.c ****             //count1 = durationOfRed + 1;
 900              		.loc 1 240 20 is_stmt 0 view .LVU238
 901 0162 044B     		ldr	r3, .L61+12
 902 0164 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 903              	.LVL79:
 242:Core/Src/main.c **** 
 904              		.loc 1 242 13 is_stmt 1 view .LVU239
 905 0166 A9E7     		b	.L52
 906              	.L62:
 907              		.align	2
 908              	.L61:
 909 0168 00000000 		.word	.LANCHOR1
 910 016c 00000000 		.word	modeState
 911 0170 00000000 		.word	durationOfRed
 912 0174 00000000 		.word	durationOfYellow
 913 0178 00000000 		.word	durationOfGreen
 914 017c 00000000 		.word	timer1_flag
 915 0180 00080140 		.word	1073809408
 916              		.cfi_endproc
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 30


 917              	.LFE66:
 919              		.global	segLedIndex
 920              		.global	htim2
 921              		.section	.bss.htim2,"aw",%nobits
 922              		.align	2
 923              		.set	.LANCHOR1,. + 0
 926              	htim2:
 927 0000 00000000 		.space	72
 927      00000000 
 927      00000000 
 927      00000000 
 927      00000000 
 928              		.section	.bss.segLedIndex,"aw",%nobits
 929              		.set	.LANCHOR0,. + 0
 932              	segLedIndex:
 933 0000 00       		.space	1
 934              		.text
 935              	.Letext0:
 936              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 937              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 938              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 939              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 940              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 941              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 942              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 943              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 944              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 945              		.file 12 "Core/Inc/software_timer.h"
 946              		.file 13 "Core/Inc/input_processing.h"
 947              		.file 14 "Core/Inc/input_reading.h"
 948              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 949              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 950              		.file 17 "Core/Inc/led_controlling.h"
 951              		.file 18 "<built-in>"
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:156    .text.MX_GPIO_Init:00000094 $d
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:163    .text.Scan7SEG:00000000 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:169    .text.Scan7SEG:00000000 Scan7SEG
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:223    .text.Scan7SEG:00000032 $d
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:227    .text.Scan7SEG:00000036 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:284    .text.Scan7SEG:00000090 $d
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:291    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:297    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:334    .text.Error_Handler:00000000 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:340    .text.Error_Handler:00000000 Error_Handler
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:372    .text.MX_TIM2_Init:00000000 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:377    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:480    .text.MX_TIM2_Init:00000064 $d
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:485    .text.SystemClock_Config:00000000 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:491    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:584    .text.main:00000000 $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:590    .text.main:00000000 main
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:717    .text.main:00000088 $d
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:721    .text.main:0000008c $t
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:909    .text.main:00000168 $d
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:932    .bss.segLedIndex:00000000 segLedIndex
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:926    .bss.htim2:00000000 htim2
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:922    .bss.htim2:00000000 $d
C:\Users\james\AppData\Local\Temp\cclLEpV3.s:933    .bss.segLedIndex:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
Disable7SEG
display7SEG
Enable7SEG
setTimer2
timer2_flag
timerRun
button_reading
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
TurnAllLightsOff
DisableAllSegs
setTimer1
ToggleAllRedLeds
ToggleAllYellowLeds
ToggleAllGreenLeds
fsm_for_input_processing
modeState
durationOfRed
durationOfYellow
ARM GAS  C:\Users\james\AppData\Local\Temp\cclLEpV3.s 			page 32


durationOfGreen
timer1_flag
